{"version":3,"sources":["webpack:///component---src-pages-open-source-js-21436e6d2bfc630f49ce.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/open-source.js"],"names":["webpackJsonp","262","module","exports","__webpack_require__","Glamor","_interopRequireDefault","obj","__esModule","default","_react","_gatsbyLink","_gatsbyLink2","PostLink","_ref","post","createElement","to","frontmatter","path","title","date","call","268","pageQuery","undefined","_postLink","_postLink2","OpenSourcePage","edges","data","allMarkdownRemark","Posts","filter","edge","node","map","key","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,IAEJ,SAASC,GAAS,YAY9C,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFJ,EAAQK,YAAa,CCPtB,IAAAE,GAAAN,EAAA,GACAO,GDUeL,EAAuBI,GCVtCN,EAAA,KDcKQ,EAAeN,EAAuBK,GCZrCE,EAAW,SAAAC,GAAA,GAAGC,GAAHD,EAAGC,IAAH,OACfV,GAAAW,cAAA,WACEX,EAAAW,cAAAJ,EAAAH,SAAMQ,GAAIF,EAAKG,YAAYC,MACxBJ,EAAKG,YAAYE,MADpB,KAC6BL,EAAKG,YAAYG,KAD9C,MD8BHlB,GAAQM,QCxBMI,EDyBdX,EAAOC,QAAUA,EAAiB,UACLmB,KAAKnB,EAASC,EAAoB,MAI1DmB,IACA,SAAUrB,EAAQC,EAASC,IAEJ,SAASC,GAAS,YAa9C,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAXvFJ,EAAQK,YAAa,EACrBL,EAAQqB,UAAYC,ME/CrB,IAAAf,GAAAN,EAAA,GACAsB,GFkDepB,EAAuBI,GElDtCN,EAAA,MFsDKuB,EAAarB,EAAuBoB,GElDnCE,EAAiB,SAAAd,GAAgD,GAAhBe,GAAgBf,EAA7CgB,KAAQC,kBAAqBF,MAC/CG,EAAQH,EACXI,OAAO,SAAAC,GAAA,QAAUA,EAAKC,KAAKjB,YAAYG,OACvCe,IAAI,SAAAF,GAAA,MAAQ7B,GAAAW,cAAAW,EAAAlB,SAAU4B,IAAKH,EAAKC,KAAKG,GAAIvB,KAAMmB,EAAKC,QAEvD,OACA9B,GAAAW,cAAA,WACEX,EAAAW,cAAA,uCACAX,EAAAW,cAAA,WAAMgB,IF0ET7B,GAAQM,QErEMmB,CAEFJ,kDFqEiBF,KAAKnB,EAASC,EAAoB","file":"component---src-pages-open-source-js-21436e6d2bfc630f49ce.js","sourcesContent":["webpackJsonp([103869943198658],{\n\n/***/ 262:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(57);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar PostLink = function PostLink(_ref) {\n\t  var post = _ref.post;\n\t  return Glamor.createElement(\n\t    \"div\",\n\t    null,\n\t    Glamor.createElement(\n\t      _gatsbyLink2.default,\n\t      { to: post.frontmatter.path },\n\t      post.frontmatter.title,\n\t      \" (\",\n\t      post.frontmatter.date,\n\t      \")\"\n\t    )\n\t  );\n\t};\n\t\n\texports.default = PostLink;\n\tmodule.exports = exports[\"default\"];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ }),\n\n/***/ 268:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _postLink = __webpack_require__(262);\n\t\n\tvar _postLink2 = _interopRequireDefault(_postLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// TODO: replace this page with a single markdown document.\n\t\n\tvar OpenSourcePage = function OpenSourcePage(_ref) {\n\t  var edges = _ref.data.allMarkdownRemark.edges;\n\t\n\t  var Posts = edges.filter(function (edge) {\n\t    return !!edge.node.frontmatter.date;\n\t  }) // You can filter your posts based on some criteria\n\t  .map(function (edge) {\n\t    return Glamor.createElement(_postLink2.default, { key: edge.node.id, post: edge.node });\n\t  });\n\t\n\t  return Glamor.createElement(\n\t    \"div\",\n\t    null,\n\t    Glamor.createElement(\n\t      \"h1\",\n\t      null,\n\t      \"Open Source Contributions\"\n\t    ),\n\t    Glamor.createElement(\n\t      \"div\",\n\t      null,\n\t      Posts\n\t    )\n\t  );\n\t};\n\t/*  */\n\texports.default = OpenSourcePage;\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-open-source-js-21436e6d2bfc630f49ce.js","import React from \"react\";\r\nimport Link from \"gatsby-link\";\r\n\r\nconst PostLink = ({ post }) => (\r\n  <div>\r\n    <Link to={post.frontmatter.path}>\r\n      {post.frontmatter.title} ({post.frontmatter.date})\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default PostLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/post-link.js","import React from 'react'\r\nimport PostLink from \"../components/post-link\";\r\n\r\n// TODO: replace this page with a single markdown document.\r\n\r\nconst OpenSourcePage = ({ data: { allMarkdownRemark: { edges } } }) => {\r\n  const Posts = edges\r\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\r\n\r\n  return (\r\n  <div>\r\n    <h1>Open Source Contributions</h1>\r\n    <div>{Posts}</div>\r\n  </div>\r\n  )\r\n}\r\n/*  */\r\nexport default OpenSourcePage\r\n\r\nexport const pageQuery = graphql`\r\n  query OpenSourceQuery {\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: { path: { glob: \"/open-source/*\" } } }\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/open-source.js"],"sourceRoot":""}